plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {

    namespace 'com.shiki.koko.androidconfigure'
    compileSdk 33

    defaultConfig {
        applicationId "com.shiki.koko.androidconfigure"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        debug {
//            storeFile file('C:\\Users\\17962\\Desktop\\kokoAndroidConfigure.jks')
            storeFile file('../kokoAndroidConfigure.jks')
            storePassword 'wenlu1796'
            keyAlias 'Smilekoko'
            keyPassword 'wanglei1796'
        }
        realse {
//            storeFile file('C:\\Users\\17962\\Desktop\\kokoAndroidConfigure.jks')
            storeFile file("../kokoAndroidConfigure.jks")
            storePassword 'wenlu1796'
            keyAlias 'Smilekoko'
            keyPassword 'wanglei1796'
        }
    }

    //构建变体类型
    buildTypes {
        debug {
            //applicationIdSuffix：修改应用唯一ID标识。其实就是在applicationId加上后缀进行区分,同个手机可以按照多个变体
            //包名：xxx.xxx.xxx.debug
//            applicationIdSuffix ".debug"
            debuggable true
        }

        release {
            minifyEnabled true//true 开启混淆 false 关闭混淆
            //资源搜索去除无用资源
            shrinkResources true
//            applicationIdSuffix ".release"
            //proguard-android-optimize.txt 是Android默认的混淆文件规则 位置：SDK->tools->proguard
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.realse
        }

//        getByName("debug") {
//            applicationIdSuffix = ".debug"
//            isDebuggable = true
//        }

//        getByName("release") {
//            applicationIdSuffix = ".release"
//            isMinifyEnabled = true
//            proguardFiles(getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro")
//        }
    }

    //添加风味维度：风味变体的大类
    flavorDimensions "version"
//    flavorDimensions += "version"


    //添加风味变体
    productFlavors {
        koko {
            //风味变体必须指定风味维度
            dimension "version"
            applicationIdSuffix ".koko"
            versionNameSuffix "-koko"
        }
        fate {
            dimension "version"
            applicationIdSuffix ".fate"
            //版本名后缀
            versionNameSuffix "-fate"
            proguardFiles 'fateflavor-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}